{"version":3,"file":"bundle.js","sources":["useData.js","XAxis.js","YAxis.js","VoronoiOverlay.js","LineChart.js","index.js"],"sourcesContent":["import {useState, useEffect} from \"react\";\nimport {csv, timeParse} from 'd3';\n\nconst csvUrl ='https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv';\n\n//version below tied to specific commit for stability\n// const csvUrl ='https://raw.githubusercontent.com/CSSEGISandData/COVID-19/bb5678530e6ed383457234c0c2f95586a2133af5/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_US.csv';\n\nconst sum = (accumulator, currentValue) => accumulator + currentValue;\n\nconst parseDay = timeParse('%m/%d/%y')\n\nconst editData = rawData =>{\n  //console.log(rawData.columns)\n  //filter out to show only\n  const caliData = rawData.filter(d => d['Province_State'] === 'California');\n  //create arr of columns that only contain dates\n\tconst days = rawData.columns.slice(12);\n  //iterate thru each county\n  return caliData.map(d =>{\n  \tconst countyName = d['Admin2']\n  \t//for each day create obj\n    const caliTimeseries = days.map(day => ({ \t\n    \tdate: parseDay(day),\n    \tdeathTotal: +d[day],\n      countyName\n  \t}));\n    caliTimeseries.countyName = countyName;\n    return caliTimeseries\n  });\n};\n\n\nexport const useData = () =>{\n\tconst [data, setData] = useState();\n  \n  useEffect(() => {\n  \tcsv(csvUrl).then(rawData =>{\n    \tsetData(editData(rawData))\n    })\n  }, [])\n  \n  return data\n}","import {useRef, useEffect} from 'react';\nimport {select, axisBottom} from 'd3';\n\nexport const XAxis = ({xScale, innerHeight}) =>{\n  const ref = useRef();\n  useEffect(() => {\n    //ref's current is the dom node containing the el\n  \tconst xAxisG = select(ref.current);\n    const xAxis = axisBottom(xScale)\n    \t.tickSize(-innerHeight)\n    //rotate the labels bc they are too long \n    xAxisG.call(xAxis).selectAll('.tick text')\n    \t.attr(\"transform\", \"translate(0,5)rotate(-45)\")\n  },[])\n  //d3 manages the dom in the element below, not react\n\treturn <g transform={`translate(0,${innerHeight})`} ref={ref}/>\n}","import {useRef, useEffect} from 'react';\nimport {select, axisLeft, tickFormat} from 'd3';\n\nexport const YAxis = ({yScale, innerWidth}) =>{\n  const ref = useRef();\n  useEffect(() => {\n    //ref's current is the dom node containing the el\n  \tconst yAxisG = select(ref.current);\n    const yAxis = axisLeft(yScale)\n    \t.tickSize(-innerWidth)\n    \t.tickPadding(3)\n    \t//reduce log ticks to 10, with standard (~s) formatting\n    \t.ticks(10, \"~s\")\n    \t\n  \t//remove the last tick in the axis, bc it's alread in the XMarkerLine\n    yAxisG.call(yAxis);\n\n  },[])\n  \n\treturn <g ref={ref}/>\n}","import {useMemo} from 'react';\n\nexport const VoronoiOverlay = ({\n  innerWidth, \n  innerHeight, \n  allData, \n  lineGen, \n  onHover,\n  margin\n}) =>{\n\treturn useMemo(() =>{\n    //check if it only runs once/necessary\n    //console.log('memoizing');\n  \tconst points =  allData.map(d => [\n      lineGen.x()(d),\n      lineGen.y()(d)\n    ]);\n  \t//generate polygon from given points\n\t\tconst delaunay = d3.Delaunay.from(points);\n  \t//apply delaunay polygon to voronoi canvas\n   \tconst voronoi = delaunay.voronoi([0, 0, innerWidth + margin.right, innerHeight]);\n  \treturn( \n    <g className=\"voronoi\">\n    \t{points.map((point, i) =>(\n  \t\t\t<path\n      \t\tonMouseEnter={() => onHover(allData[i])} \n      \t\td={voronoi.renderCell(i)}\n      \t/>\n  \t))}\n    </g>\n\t)}, [allData, lineGen, innerWidth, innerHeight, onHover]);\n};","import React, { useState, useCallback, useMemo } from 'react';\nimport {scaleTime, scaleLog,  extent, max, line, timeFormat, format} from 'd3';\n\nimport {XAxis} from './XAxis';\nimport {YAxis} from './YAxis';\nimport {VoronoiOverlay} from './VoronoiOverlay';\n\nconst xValue = d => d.date;\nconst yValue = d => d.deathTotal;\n\nconst margin = {top: 45, right: 40, bottom: 95, left: 75};\n\nconst formatDate = timeFormat('%b %d, %Y');\nconst formatComma = format(',')\n\nconst Tooltip = ({activeRow, className}) =>(\n  <text className={className} x={-10} y={-1} text-anchor={'end'} >\n    {activeRow.countyName}: {formatComma(activeRow.deathTotal)}\n    {activeRow.deathTotal === 1 ? ' death': ' deaths'} as of {formatDate(activeRow.date)}\n  </text> \n)\n\nexport const LineChart = ({data, width, height}) => {\n  //chanved activeCountyName to activeRow to contain more info\n  const[activeRow, setActiveRow] = useState();\n  \n  const innerWidth = width - margin.left - margin.right;\n\tconst innerHeight = height - margin.top - margin.bottom;\n  \n  //concat all caliTimeseries together into one arr\n  //makes it accessible for voronoi polygons\n  const allData = useMemo(() => data.reduce(\n    (accumulator, caliTimeseries) => accumulator.concat(caliTimeseries),\n    []\n  ),[data]); \n\n  const epsilon = 1;\n  \n  const xScale = useMemo(() => scaleTime()\n  \t.domain(extent(allData, xValue))\n  \t.range([0, innerWidth]),\n    [allData, xValue]);\n  \n  const yScale = useMemo(() => scaleLog()\n  \t.domain([epsilon, max(allData, yValue)])\n  \t.range([innerHeight, 0]),\n    [epsilon, allData, yValue]);\n  \n  const lineGen = useMemo(() => line()\n  \t.x(d => xScale(xValue(d)))\n\t\t.y(d => yScale(epsilon+ yValue(d))),\n    [xScale,xValue,yScale,epsilon,yValue])\n\n\tconst mostRecentDate = xScale.domain()[1];\n  \n  //useCallback to refer to cache instead of new function\n  const handleVoronoiHover = useCallback(setActiveRow, []);\n  \n\treturn (\n    <svg width={width} height={height}>\n      <g transform={`translate(${margin.left}, ${margin.top})`}>\n        <XAxis xScale={xScale} innerHeight={innerHeight}/>\n        <YAxis yScale={yScale} innerWidth={innerWidth}/>\n        {//single js that returns a val\n        \tdata.map(caliTimeseries => (\n            <path className = 'marker-line'  d={lineGen(caliTimeseries)} />\n          ))\n        }\n        {activeRow ? //isolate active line\n          <>\n        <path \n          className = 'marker-line active'\n          // parses data for match and returns the indexed val \n          d={lineGen(data.find(\n              caliTimeseries=>\n              \tcaliTimeseries.countyName === activeRow.countyName))} />\n          <g transform={`translate(${lineGen.x()(activeRow)},${lineGen.y()(activeRow)})`}>\n            <circle r={10}/>\n            //first text to make actual text POP\n            <Tooltip className=\"tooltip-stroke\" activeRow={activeRow}/>\n            <Tooltip className=\"tooltip\" activeRow={activeRow}/>\n          </g>\n          </>\n        :null\n        }\n        <text className='title'\n          transform='translate(0,-10)'\n          >\n          California Coronavirus Deaths Over Time\n        </text>\n        <text\n          className=\"axis-label\"\n          transform={`translate(-40,${innerHeight/2}) rotate(-90)`} \n          >\n          Cumulative Deaths\n        </text>\n        <text\n          className=\"axis-label\"\n          transform={`translate(${innerWidth/2},${innerHeight+70})`} \n          alignment-baseline=\"hanging\"\n          >\n          Time\n        </text>\n\t\t\t\t<VoronoiOverlay \n          onHover={handleVoronoiHover}\n          innerHeight={innerHeight}\n          innerWidth={innerWidth}\n          allData={allData}\n          lineGen={lineGen}\n          margin={margin}\n          />\n      \t\n      </g>\n    </svg>\n)}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {range} from 'd3';\n\nimport {useData} from './useData';\nimport {LineChart} from './LineChart';\n\n//adaptable viewport\nconst height = window.innerHeight;\nconst width = window.innerWidth;\n\nconst App = () =>{\n  const data = useData();\n\treturn data \n    ? <LineChart data={data} height={height} width={width} /> \n    : null;\n};\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App/>,rootElement);"],"names":["const","timeParse","useState","useEffect","csv","useRef","select","axisBottom","axisLeft","useMemo","timeFormat","format","React","scaleTime","extent","scaleLog","max","line","useCallback","ReactDOM"],"mappings":";;;;;;;;EAGAA,IAAM,MAAM,EAAE,iJAAiJ,CAAC;AAMhK;EACAA,IAAM,QAAQ,GAAGC,cAAS,CAAC,UAAU,EAAC;AACtC;EACAD,IAAM,QAAQ,aAAG,SAAU;EAC3B;EACA;EACA,EAAEA,IAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,WAAC,YAAK,CAAC,CAAC,gBAAgB,CAAC,KAAK,eAAY,CAAC,CAAC;EAC7E;EACA,CAACA,IAAM,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;EACxC;EACA,EAAE,OAAO,QAAQ,CAAC,GAAG,WAAC,GAAI;EAC1B,GAAGA,IAAM,UAAU,GAAG,CAAC,CAAC,QAAQ,EAAC;EACjC;EACA,IAAIA,IAAM,cAAc,GAAG,IAAI,CAAC,GAAG,WAAC,eAAQ;EAC5C,KAAK,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC;EACxB,KAAK,UAAU,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;EACxB,kBAAM,UAAU;EAChB,IAAI,IAAC,CAAC,CAAC;EACP,IAAI,cAAc,CAAC,UAAU,GAAG,UAAU,CAAC;EAC3C,IAAI,OAAO,cAAc;EACzB,GAAG,CAAC,CAAC;EACL,CAAC,CAAC;AACF;AACA;EACOA,IAAM,OAAO,eAAQ;EAC5B,QAAsB,GAAGE,gBAAQ;GAAzB;GAAM,qBAAsB;EACpC;EACA,EAAEC,iBAAS,aAAO;EAClB,GAAGC,QAAG,CAAC,MAAM,CAAC,CAAC,IAAI,WAAC,SAAU;EAC9B,KAAK,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAC;EAC/B,KAAK,EAAC;EACN,GAAG,EAAE,EAAE,EAAC;EACR;EACA,EAAE,OAAO,IAAI;EACb;;ECxCOJ,IAAM,KAAK,kBAAyB,EAAI;8BAAhB;;AAAiB;EAChD,EAAEA,IAAM,GAAG,GAAGK,cAAM,EAAE,CAAC;EACvB,EAAEF,iBAAS,aAAO;EAClB;EACA,GAAGH,IAAM,MAAM,GAAGM,WAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;EACtC,IAAIN,IAAM,KAAK,GAAGO,eAAU,CAAC,MAAM,CAAC;EACpC,MAAM,QAAQ,CAAC,CAAC,WAAW,EAAC;EAC5B;EACA,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC;EAC9C,MAAM,IAAI,CAAC,WAAW,EAAE,2BAA2B,EAAC;EACpD,GAAG,CAAC,EAAE,EAAC;EACP;EACA,CAAC,OAAO,4BAAG,6BAA0B,WAAW,OAAI,EAAC,KAAK,KAAI,CAAE;EAChE;;ECbOP,IAAM,KAAK,kBAAwB,EAAI;8BAAf;;AAAgB;EAC/C,EAAEA,IAAM,GAAG,GAAGK,cAAM,EAAE,CAAC;EACvB,EAAEF,iBAAS,aAAO;EAClB;EACA,GAAGH,IAAM,MAAM,GAAGM,WAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;EACtC,IAAIN,IAAM,KAAK,GAAGQ,aAAQ,CAAC,MAAM,CAAC;EAClC,MAAM,QAAQ,CAAC,CAAC,UAAU,CAAC;EAC3B,MAAM,WAAW,CAAC,CAAC,CAAC;EACpB;EACA,MAAM,KAAK,CAAC,EAAE,EAAE,IAAI,EAAC;EACrB;EACA;EACA,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACvB;EACA,GAAG,CAAC,EAAE,EAAC;EACP;EACA,CAAC,OAAO,4BAAG,KAAK,KAAI,CAAE;EACtB;;EClBOR,IAAM,cAAc,gBAO1B,EAAI;mCALH;qCACA;6BACA;6BACA;6BACA;;AACI;EACN,CAAC,OAAOS,eAAO,aAAM;EACrB;EACA;EACA,GAAGT,IAAM,MAAM,IAAI,OAAO,CAAC,GAAG,WAAC,YAAK;EACpC,MAAM,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACpB,MAAM,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACpB,QAAK,CAAC,CAAC;EACP;EACA,EAAEA,IAAM,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;EAC5C;EACA,IAAIA,IAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,GAAG,MAAM,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,CAAC;EACrF,GAAG;EACH,IAAI,4BAAG,WAAU;EACjB,KAAM,MAAM,CAAC,GAAG,WAAE,KAAK,EAAE,CAAC;EAC1B,KAAK;EACL,QAAQ,mCAAoB,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,IAAE,EACxC,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,GAAE,CACxB;EACT,OAAI,CAAE;EACN,KAAQ;EACR,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC;EAC3D,CAAC;;ECxBDA,IAAM,MAAM,aAAG,YAAK,CAAC,CAAC,OAAI,CAAC;EAC3BA,IAAM,MAAM,aAAG,YAAK,CAAC,CAAC,aAAU,CAAC;AACjC;EACAA,IAAM,MAAM,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;AAC1D;EACAA,IAAM,UAAU,GAAGU,eAAU,CAAC,WAAW,CAAC,CAAC;EAC3CV,IAAM,WAAW,GAAGW,WAAM,CAAC,GAAG,EAAC;AAC/B;EACAX,IAAM,OAAO,gBAA0B;kCAAV;;;;EAC7B,EAAEY,mDAAM,WAAW,SAAU,EAAC,GAAG,CAAC,EAAG,EAAC,GAAG,CAAC,CAAE,EAAC,eAAa;EAC1D,IAAK,SAAS,CAAC,YAAW,MAAG,WAAW,CAAC,SAAS,CAAC,UAAU;EAC7D,IAAK,SAAS,CAAC,UAAU,KAAK,CAAC,GAAG,QAAQ,EAAE,WAAU,WAAQ,UAAU,CAAC,SAAS,CAAC,IAAI,CAAE;EACzF,GAAS;EACT;IAAC;AACD;EACOZ,IAAM,SAAS,gBAAyB,EAAK;wBAAnB;0BAAO;;AAAa;EACrD;EACA,WAAgC,GAAGE,gBAAQ;IAAnC;IAAW,4BAA2B;EAC9C;EACA,EAAEF,IAAM,UAAU,GAAG,KAAK,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC;EACxD,CAACA,IAAM,WAAW,GAAG,MAAM,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;EACzD;EACA;EACA;EACA,EAAEA,IAAM,OAAO,GAAGS,eAAO,sBAAO,IAAI,CAAC,MAAM;EAC3C,cAAK,WAAW,EAAE,cAAc,WAAK,WAAW,CAAC,MAAM,CAAC,cAAc,IAAC;EACvE,IAAI,EAAE;EACN,MAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACZ;EACA,EAAET,IAAM,OAAO,GAAG,CAAC,CAAC;EACpB;EACA,EAAEA,IAAM,MAAM,GAAGS,eAAO,sBAAOI,cAAS,EAAE;EAC1C,IAAI,MAAM,CAACC,WAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;EACnC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,IAAC;EAC1B,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;EACvB;EACA,EAAEd,IAAM,MAAM,GAAGS,eAAO,sBAAOM,aAAQ,EAAE;EACzC,IAAI,MAAM,CAAC,CAAC,OAAO,EAAEC,QAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;EAC3C,IAAI,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,IAAC;EAC3B,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;EAChC;EACA,EAAEhB,IAAM,OAAO,GAAGS,eAAO,sBAAOQ,SAAI,EAAE;EACtC,IAAI,CAAC,WAAC,YAAK,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAC,CAAC;EAC7B,GAAG,CAAC,WAAC,YAAK,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC,IAAC,IAAC;EACrC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,EAAC;AAC1C;EACA,CAAwB,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE;EAC3C;EACA;EACA,EAAEjB,IAAM,kBAAkB,GAAGkB,mBAAW,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;EAC3D;EACA,CAAC;EACD,IAAIN,kDAAK,OAAO,KAAM,EAAC,QAAQ;EAC/B,MAAMA,gDAAG,4BAAwB,MAAM,CAAC,KAAI,WAAK,MAAM,CAAC,IAAG;EAC3D,QAAQA,yCAAC,SAAM,QAAQ,MAAO,EAAC,aAAa,aAAY;EACxD,QAAQA,yCAAC,SAAM,QAAQ,MAAO,EAAC,YAAY,YAAW;EACtD,QACS,IAAI,CAAC,GAAG,WAAC;EAClB,YAAYA,mDAAM,WAAY,aAAa,EAAE,GAAG,OAAO,CAAC,cAAc,GAAE,CAAG;EAC3E,cAAW;EAEX,QAAS,SAAS;EAClB,UAAUA;EACV,QAAQA;EACR,UAAU,WAAY,oBAAoB,EAEhC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI;EAC9B,wBAAc,wBACC,cAAc,CAAC,UAAU,KAAK,SAAS,CAAC,aAAU,CAAC,GAAE;EACpE,UAAUA,gDAAG,4BAAwB,OAAO,CAAC,CAAC,EAAE,CAAC,SAAS,EAAC,UAAI,OAAO,CAAC,CAAC,EAAE,CAAC,SAAS,EAAC;EACrF,YAAYA,qDAAQ,GAAG,IAAG,GAAE,yCAEhBA,yCAAC,WAAQ,WAAU,gBAAgB,EAAC,WAAW,WAAU;EACrE,YAAYA,yCAAC,WAAQ,WAAU,SAAS,EAAC,WAAW,WAAU,CAAE;EAChE,WAAc;EACd,WAAa;EACb,SAAS;EAET,QAAQA,mDAAM,WAAU,OAAO,EACrB,WAAU,sBACT,yCAEH;EACR,QAAQA;EACR,UAAU,WAAU,YAAY,EACtB,gCAA4B,WAAW,CAAC,EAAC,uBACxC,mBAEH;EACR,QAAQA;EACR,UAAU,WAAU,YAAY,EACtB,4BAAwB,UAAU,CAAC,EAAC,UAAI,WAAW,CAAC,GAAE,OAAI,EAC1D,sBAAmB,aAClB,MAEH;EACR,IAAIA,yCAAC;EACL,UAAU,SAAS,kBAAmB,EAC5B,aAAa,WAAY,EACzB,YAAY,UAAW,EACvB,SAAS,OAAQ,EACjB,SAAS,OAAQ,EACjB,QAAQ,QAAO,CACb;EACZ;EACA,OAAU;EACV,KAAU;EACV,CAAC;;EC3GD;EACAZ,IAAM,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC;EAClCA,IAAM,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC;AAChC;EACAA,IAAM,GAAG,eAAQ;EACjB,EAAEA,IAAM,IAAI,GAAG,OAAO,EAAE,CAAC;EACzB,CAAC,OAAO,IAAI;EACZ,MAAMY,yCAAC,aAAU,MAAM,IAAK,EAAC,QAAQ,MAAO,EAAC,OAAO,OAAM,CAAG;EAC7D,MAAM,IAAI,CAAC;EACX,CAAC,CAAC;AACF;EACAZ,IAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;AACpDmB,8BAAQ,CAAC,MAAM,CAACP,yCAAC,SAAG,EAAE,CAAC,WAAW,CAAC;;;;;;"}